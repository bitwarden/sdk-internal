[workspace]
resolver = "2"
members = ["bitwarden_license/*", "crates/*"]

# Global settings for all crates should be defined here
[workspace.package]
# Update using `cargo set-version -p bitwarden-core <new-version>`
version = "1.0.0"
authors = ["Bitwarden Inc"]
edition = "2021"
# Important: Changing rust-version should be considered a breaking change
rust-version = "1.82"
homepage = "https://bitwarden.com"
repository = "https://github.com/bitwarden/sdk-internal"
license-file = "LICENSE"
readme = "DISCLAIMER.md"
keywords = ["bitwarden"]

# Define dependencies that are expected to be consistent across all crates
[workspace.dependencies]
bitwarden = { path = "crates/bitwarden", version = "=1.0.0" }
bitwarden-api-api = { path = "crates/bitwarden-api-api", version = "=1.0.0" }
bitwarden-api-identity = { path = "crates/bitwarden-api-identity", version = "=1.0.0" }
bitwarden-auth = { path = "crates/bitwarden-auth", version = "=1.0.0" }
bitwarden-cli = { path = "crates/bitwarden-cli", version = "=1.0.0" }
bitwarden-collections = { path = "crates/bitwarden-collections", version = "=1.0.0" }
bitwarden-core = { path = "crates/bitwarden-core", version = "=1.0.0" }
bitwarden-crypto = { path = "crates/bitwarden-crypto", version = "=1.0.0" }
bitwarden-encoding = { path = "crates/bitwarden-encoding", version = "=1.0.0" }
bitwarden-error = { path = "crates/bitwarden-error", version = "=1.0.0" }
bitwarden-error-macro = { path = "crates/bitwarden-error-macro", version = "=1.0.0" }
bitwarden-exporters = { path = "crates/bitwarden-exporters", version = "=1.0.0" }
bitwarden-fido = { path = "crates/bitwarden-fido", version = "=1.0.0" }
bitwarden-generators = { path = "crates/bitwarden-generators", version = "=1.0.0" }
bitwarden-ipc = { path = "crates/bitwarden-ipc", version = "=1.0.0" }
bitwarden-send = { path = "crates/bitwarden-send", version = "=1.0.0" }
bitwarden-sm = { path = "bitwarden_license/bitwarden-sm", version = "=1.0.0" }
bitwarden-ssh = { path = "crates/bitwarden-ssh", version = "=1.0.0" }
bitwarden-state = { path = "crates/bitwarden-state", version = "=1.0.0" }
bitwarden-test = { path = "crates/bitwarden-test", version = "=1.0.0" }
bitwarden-threading = { path = "crates/bitwarden-threading", version = "=1.0.0" }
bitwarden-uniffi-error = { path = "crates/bitwarden-uniffi-error", version = "=1.0.0" }
bitwarden-uuid = { path = "crates/bitwarden-uuid", version = "=1.0.0" }
bitwarden-uuid-macro = { path = "crates/bitwarden-uuid-macro", version = "=1.0.0" }
bitwarden-vault = { path = "crates/bitwarden-vault", version = "=1.0.0" }

# External crates that are expected to maintain a consistent version across all crates
async-trait = ">=0.1.80, <0.2"
chrono = { version = ">=0.4.26, <0.5", features = [
    "clock",
    "serde",
    "std",
], default-features = false }
data-encoding = ">=2.0, <3"
js-sys = { version = ">=0.3.72, <0.4" }
log = ">=0.4.18, <0.5"
proc-macro2 = ">=1.0.89, <2"
quote = ">=1.0.37, <2"
reqwest = { version = ">=0.12.5, <0.13", features = [
    "json",
    "multipart",
    "http2",
], default-features = false }
schemars = { version = ">=1.0.0, <2.0", features = ["uuid1", "chrono04"] }
serde = { version = ">=1.0, <2.0", features = ["derive"] }
serde_bytes = { version = ">=0.11.17, <0.12.0" }
serde_json = ">=1.0.96, <2.0"
serde_qs = ">=0.12.0, <0.16"
serde_repr = ">=0.1.12, <0.2"
serde-wasm-bindgen = ">=0.6.0, <0.7"
syn = ">=2.0.87, <3"
thiserror = ">=1.0.40, <3"
tokio = { version = "1.36.0", features = ["macros"] }
tsify = { version = ">=0.5.5, <0.6", features = [
    "js",
], default-features = false }
uniffi = "=0.29.1"
uuid = { version = ">=1.3.3, <2.0", features = ["serde", "v4", "js"] }
validator = { version = ">=0.18.1, <0.21", features = ["derive"] }
wasm-bindgen = { version = ">=0.2.91, <0.3", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.41"
wasm-bindgen-test = "0.3.45"
wiremock = ">=0.6.0, <0.7"

# There is an incompatibility when using pkcs5 and chacha20 on wasm builds. This can be removed once a new
# rustcrypto-formats crate version is released since the fix has been upstreamed.
# https://github.com/RustCrypto/formats/pull/1625
[patch.crates-io]
pkcs5 = { git = "https://github.com/bitwarden/rustcrypto-formats.git", rev = "2b27c63034217dd126bbf5ed874da51b84f8c705" }

[workspace.lints.clippy]
unused_async = "deny"
unwrap_used = "deny"
string_slice = "warn"

[workspace.lints.rust]
missing_docs = "warn"

# Compile all dependencies with some optimizations when building this crate on debug
# This slows down clean builds by about 50%, but the resulting binaries can be orders of magnitude faster
# As clean builds won't occur very often, this won't slow down the development process
[profile.dev.package."*"]
opt-level = 2

# Turn on a small amount of optimisation in development mode. This might interfere when trying to use a debugger
# if the compiler decides to optimize some code away, if that's the case, it can be set to 0 or commented out
[profile.dev]
opt-level = 1

# Turn on LTO on release mode
[profile.release]
codegen-units = 1
lto = true
opt-level = "z"

# Enable optimization for the bitwarden-crypto crate. This will increase the binary size slightly (~0.1MB),
# but it will more aggressively inline functions. This will help us avoid extra stack copies of keys and
# other sensitive values being left behind without cleanup.
[profile.release.package.bitwarden-crypto]
opt-level = 3

# Stripping the binary reduces the size by ~30%, but the stacktraces won't be usable anymore.
# This is fine as long as we don't have any unhandled panics, but let's keep it disabled for now
# strip = true
