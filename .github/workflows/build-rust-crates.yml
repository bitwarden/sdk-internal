name: Build Rust crates

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "main"

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read

jobs:
  build:
    name: Building all crates for - ${{ matrix.os }}

    runs-on: ${{ matrix.os || 'ubuntu-24.04' }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-14
          - ubuntu-24.04
          - windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install rust
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # stable
        with:
          toolchain: stable

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7

      - name: Build packages
        shell: pwsh
        run: |
          # Get all directories in the crates folder
          $packages = Get-ChildItem -Path "crates" -Directory | Select-Object -ExpandProperty Name

          Write-Host "Found packages: $($packages -join ', ')"

          foreach ($package in $packages) {
            Write-Host "Building package: $package"
            cargo build -p $package
            if ($LASTEXITCODE -ne 0) {
              Write-Error "Failed to build $package"
              exit $LASTEXITCODE
            }
          }
        env:
          RUSTFLAGS: "-D warnings"

  release-dry-run:
    name: Release dry-run
    runs-on: ubuntu-24.04
    if: ${{ github.ref == 'refs/head/main' }}
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install rust
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # stable
        with:
          toolchain: stable

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7

      - name: Install cargo-release
        run: cargo install cargo-release

      - name: Cargo release dry run
        run: cargo-release release publish --no-publish -p bitwarden-api-api -p bitwarden-api-identity -p bitwarden
