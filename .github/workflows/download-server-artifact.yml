name: Generate api bindings

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  download:
    name: Download internal.json from bitwarden/server

    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download json artifacts
        uses: bitwarden/gh-actions/download-artifacts@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repo: bitwarden/server
          branch: main
          workflow: build.yml
          artifacts: "*.json"
          path: artifacts/

      - name: List downloaded files
        run: |
          echo "Downloaded files:"
          find artifacts/ -type f -name "*.json" | head -10
          if [ -f "artifacts/internal.json" ]; then
            echo "internal.json file size: $(stat -c%s artifacts/internal.json) bytes"
          fi

      - name: Set Rust Nightly Toolchain
        id: nightly-toolchain
        shell: bash
        run: |
          RUST_NIGHTLY_TOOLCHAIN="$(grep -oP '^nightly-channel.*"(\K.*?)(?=")' rust-toolchain.toml)"
          echo "RUST_NIGHTLY_TOOLCHAIN=${RUST_NIGHTLY_TOOLCHAIN}" | tee -a "${GITHUB_OUTPUT}"

      - name: Install rust nightly
        run: |
          rustup toolchain install "${{ steps.nightly-toolchain.outputs.RUST_NIGHTLY_TOOLCHAIN }}"
          rustup component add rustfmt --toolchain "${{ steps.nightly-toolchain.outputs.RUST_NIGHTLY_TOOLCHAIN }}"-x86_64-unknown-linux-gnu

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7

      - name: Set Node Version
        id: retrieve-node-version
        working-directory: ./
        run: |
          NODE_NVMRC=$(cat .nvmrc)
          NODE_VERSION=${NODE_NVMRC/v/''}
          echo "node_version=$NODE_VERSION" >> $GITHUB_OUTPUT

      - name: Set up Node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          cache: "npm"
          cache-dependency-path: "package-lock.json"
          node-version: ${{ env._NODE_VERSION }}
        env:
          _NODE_VERSION: ${{ steps.retrieve-node-version.outputs.node_version }}

      - name: NPM setup
        run: npm ci

      - name: Generate API bindings
        run: ./support/build-api-ci.sh
