/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrganizationSsoResponseModel {
    #[serde(
        rename = "object",
        alias = "Object",
        skip_serializing_if = "Option::is_none"
    )]
    pub object: Option<String>,
    #[serde(
        rename = "enabled",
        alias = "Enabled",
        skip_serializing_if = "Option::is_none"
    )]
    pub enabled: Option<bool>,
    #[serde(
        rename = "identifier",
        alias = "Identifier",
        skip_serializing_if = "Option::is_none"
    )]
    pub identifier: Option<String>,
    #[serde(
        rename = "data",
        alias = "Data",
        skip_serializing_if = "Option::is_none"
    )]
    pub data: Option<Box<models::SsoConfigurationData>>,
    #[serde(
        rename = "urls",
        alias = "Urls",
        skip_serializing_if = "Option::is_none"
    )]
    pub urls: Option<Box<models::SsoUrls>>,
}

impl OrganizationSsoResponseModel {
    pub fn new() -> OrganizationSsoResponseModel {
        OrganizationSsoResponseModel {
            object: None,
            enabled: None,
            identifier: None,
            data: None,
            urls: None,
        }
    }
}
