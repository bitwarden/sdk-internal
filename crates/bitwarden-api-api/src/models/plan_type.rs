/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};
use serde_repr::{Deserialize_repr, Serialize_repr};

use crate::models;
///
#[repr(i64)]
#[derive(
    Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize_repr, Deserialize_repr,
)]
pub enum PlanType {
    Free = 0,
    FamiliesAnnually2019 = 1,
    TeamsMonthly2019 = 2,
    TeamsAnnually2019 = 3,
    EnterpriseMonthly2019 = 4,
    EnterpriseAnnually2019 = 5,
    Custom = 6,
    FamiliesAnnually = 7,
    TeamsMonthly2020 = 8,
    TeamsAnnually2020 = 9,
    EnterpriseMonthly2020 = 10,
    EnterpriseAnnually2020 = 11,
    TeamsMonthly2023 = 12,
    TeamsAnnually2023 = 13,
    EnterpriseMonthly2023 = 14,
    EnterpriseAnnually2023 = 15,
    TeamsStarter2023 = 16,
    TeamsMonthly = 17,
    TeamsAnnually = 18,
    EnterpriseMonthly = 19,
    EnterpriseAnnually = 20,
    TeamsStarter = 21,
}

impl std::fmt::Display for PlanType {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(
            f,
            "{}",
            match self {
                Self::Free => "0",
                Self::FamiliesAnnually2019 => "1",
                Self::TeamsMonthly2019 => "2",
                Self::TeamsAnnually2019 => "3",
                Self::EnterpriseMonthly2019 => "4",
                Self::EnterpriseAnnually2019 => "5",
                Self::Custom => "6",
                Self::FamiliesAnnually => "7",
                Self::TeamsMonthly2020 => "8",
                Self::TeamsAnnually2020 => "9",
                Self::EnterpriseMonthly2020 => "10",
                Self::EnterpriseAnnually2020 => "11",
                Self::TeamsMonthly2023 => "12",
                Self::TeamsAnnually2023 => "13",
                Self::EnterpriseMonthly2023 => "14",
                Self::EnterpriseAnnually2023 => "15",
                Self::TeamsStarter2023 => "16",
                Self::TeamsMonthly => "17",
                Self::TeamsAnnually => "18",
                Self::EnterpriseMonthly => "19",
                Self::EnterpriseAnnually => "20",
                Self::TeamsStarter => "21",
            }
        )
    }
}
impl Default for PlanType {
    fn default() -> PlanType {
        Self::Free
    }
}
