/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PolicyResponseModel {
    #[serde(
        rename = "object",
        alias = "Object",
        skip_serializing_if = "Option::is_none"
    )]
    pub object: Option<String>,
    #[serde(rename = "id", alias = "Id", skip_serializing_if = "Option::is_none")]
    pub id: Option<uuid::Uuid>,
    #[serde(
        rename = "organizationId",
        alias = "OrganizationId",
        skip_serializing_if = "Option::is_none"
    )]
    pub organization_id: Option<uuid::Uuid>,
    #[serde(
        rename = "type",
        alias = "R#type",
        skip_serializing_if = "Option::is_none"
    )]
    pub r#type: Option<models::PolicyType>,
    #[serde(
        rename = "data",
        alias = "Data",
        skip_serializing_if = "Option::is_none"
    )]
    pub data: Option<std::collections::HashMap<String, serde_json::Value>>,
    #[serde(
        rename = "enabled",
        alias = "Enabled",
        skip_serializing_if = "Option::is_none"
    )]
    pub enabled: Option<bool>,
}

impl PolicyResponseModel {
    pub fn new() -> PolicyResponseModel {
        PolicyResponseModel {
            object: None,
            id: None,
            organization_id: None,
            r#type: None,
            data: None,
            enabled: None,
        }
    }
}
