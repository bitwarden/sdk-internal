/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SendRequestModel {
    #[serde(
        rename = "type",
        alias = "R#type",
        skip_serializing_if = "Option::is_none"
    )]
    pub r#type: Option<models::SendType>,
    #[serde(
        rename = "fileLength",
        alias = "FileLength",
        skip_serializing_if = "Option::is_none"
    )]
    pub file_length: Option<i64>,
    #[serde(
        rename = "name",
        alias = "Name",
        skip_serializing_if = "Option::is_none"
    )]
    pub name: Option<String>,
    #[serde(
        rename = "notes",
        alias = "Notes",
        skip_serializing_if = "Option::is_none"
    )]
    pub notes: Option<String>,
    #[serde(rename = "key", alias = "Key")]
    pub key: String,
    #[serde(
        rename = "maxAccessCount",
        alias = "MaxAccessCount",
        skip_serializing_if = "Option::is_none"
    )]
    pub max_access_count: Option<i32>,
    #[serde(
        rename = "expirationDate",
        alias = "ExpirationDate",
        skip_serializing_if = "Option::is_none"
    )]
    pub expiration_date: Option<String>,
    #[serde(rename = "deletionDate", alias = "DeletionDate")]
    pub deletion_date: String,
    #[serde(
        rename = "file",
        alias = "File",
        skip_serializing_if = "Option::is_none"
    )]
    pub file: Option<Box<models::SendFileModel>>,
    #[serde(
        rename = "text",
        alias = "Text",
        skip_serializing_if = "Option::is_none"
    )]
    pub text: Option<Box<models::SendTextModel>>,
    #[serde(
        rename = "password",
        alias = "Password",
        skip_serializing_if = "Option::is_none"
    )]
    pub password: Option<String>,
    #[serde(rename = "disabled", alias = "Disabled")]
    pub disabled: bool,
    #[serde(
        rename = "hideEmail",
        alias = "HideEmail",
        skip_serializing_if = "Option::is_none"
    )]
    pub hide_email: Option<bool>,
}

impl SendRequestModel {
    pub fn new(key: String, deletion_date: String, disabled: bool) -> SendRequestModel {
        SendRequestModel {
            r#type: None,
            file_length: None,
            name: None,
            notes: None,
            key,
            max_access_count: None,
            expiration_date: None,
            deletion_date,
            file: None,
            text: None,
            password: None,
            disabled,
            hide_email: None,
        }
    }
}
