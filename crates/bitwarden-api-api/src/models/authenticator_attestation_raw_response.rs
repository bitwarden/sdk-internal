/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};
use serde_with::serde_as;

use crate::models;

#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuthenticatorAttestationRawResponse {
    #[serde_as(as = "Option<serde_with::base64::Base64>")]
    #[serde(rename = "id", alias = "Id", skip_serializing_if = "Option::is_none")]
    pub id: Option<Vec<u8>>,
    #[serde_as(as = "Option<serde_with::base64::Base64>")]
    #[serde(
        rename = "rawId",
        alias = "RawId",
        skip_serializing_if = "Option::is_none"
    )]
    pub raw_id: Option<Vec<u8>>,
    #[serde(
        rename = "type",
        alias = "R#type",
        skip_serializing_if = "Option::is_none"
    )]
    pub r#type: Option<models::PublicKeyCredentialType>,
    #[serde(
        rename = "response",
        alias = "Response",
        skip_serializing_if = "Option::is_none"
    )]
    pub response: Option<Box<models::ResponseData>>,
    #[serde(
        rename = "extensions",
        alias = "Extensions",
        skip_serializing_if = "Option::is_none"
    )]
    pub extensions: Option<Box<models::AuthenticationExtensionsClientOutputs>>,
}

impl AuthenticatorAttestationRawResponse {
    pub fn new() -> AuthenticatorAttestationRawResponse {
        AuthenticatorAttestationRawResponse {
            id: None,
            raw_id: None,
            r#type: None,
            response: None,
            extensions: None,
        }
    }
}
