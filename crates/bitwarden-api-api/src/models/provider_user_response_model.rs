/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProviderUserResponseModel {
    #[serde(
        rename = "object",
        alias = "Object",
        skip_serializing_if = "Option::is_none"
    )]
    pub object: Option<String>,
    #[serde(rename = "id", alias = "Id", skip_serializing_if = "Option::is_none")]
    pub id: Option<uuid::Uuid>,
    #[serde(
        rename = "userId",
        alias = "UserId",
        skip_serializing_if = "Option::is_none"
    )]
    pub user_id: Option<uuid::Uuid>,
    #[serde(
        rename = "type",
        alias = "R#type",
        skip_serializing_if = "Option::is_none"
    )]
    pub r#type: Option<models::ProviderUserType>,
    #[serde(
        rename = "status",
        alias = "Status",
        skip_serializing_if = "Option::is_none"
    )]
    pub status: Option<models::ProviderUserStatusType>,
    #[serde(
        rename = "permissions",
        alias = "Permissions",
        skip_serializing_if = "Option::is_none"
    )]
    pub permissions: Option<Box<models::Permissions>>,
}

impl ProviderUserResponseModel {
    pub fn new() -> ProviderUserResponseModel {
        ProviderUserResponseModel {
            object: None,
            id: None,
            user_id: None,
            r#type: None,
            status: None,
            permissions: None,
        }
    }
}
