/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrganizationUserAcceptInitRequestModel {
    #[serde(rename = "token", alias = "Token")]
    pub token: String,
    #[serde(rename = "key", alias = "Key")]
    pub key: String,
    #[serde(rename = "keys", alias = "Keys")]
    pub keys: Box<models::OrganizationKeysRequestModel>,
    #[serde(
        rename = "collectionName",
        alias = "CollectionName",
        skip_serializing_if = "Option::is_none"
    )]
    pub collection_name: Option<String>,
}

impl OrganizationUserAcceptInitRequestModel {
    pub fn new(
        token: String,
        key: String,
        keys: models::OrganizationKeysRequestModel,
    ) -> OrganizationUserAcceptInitRequestModel {
        OrganizationUserAcceptInitRequestModel {
            token,
            key,
            keys: Box::new(keys),
            collection_name: None,
        }
    }
}
