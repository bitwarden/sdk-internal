/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrganizationUserUpdateRequestModel {
    #[serde(rename = "type", alias = "R#type")]
    pub r#type: models::OrganizationUserType,
    #[serde(
        rename = "accessSecretsManager",
        alias = "AccessSecretsManager",
        skip_serializing_if = "Option::is_none"
    )]
    pub access_secrets_manager: Option<bool>,
    #[serde(
        rename = "permissions",
        alias = "Permissions",
        skip_serializing_if = "Option::is_none"
    )]
    pub permissions: Option<Box<models::Permissions>>,
    #[serde(
        rename = "collections",
        alias = "Collections",
        skip_serializing_if = "Option::is_none"
    )]
    pub collections: Option<Vec<models::SelectionReadOnlyRequestModel>>,
    #[serde(
        rename = "groups",
        alias = "Groups",
        skip_serializing_if = "Option::is_none"
    )]
    pub groups: Option<Vec<uuid::Uuid>>,
}

impl OrganizationUserUpdateRequestModel {
    pub fn new(r#type: models::OrganizationUserType) -> OrganizationUserUpdateRequestModel {
        OrganizationUserUpdateRequestModel {
            r#type,
            access_secrets_manager: None,
            permissions: None,
            collections: None,
            groups: None,
        }
    }
}
