/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CipherFido2CredentialModel {
    #[serde(
        rename = "credentialId",
        alias = "CredentialId",
        skip_serializing_if = "Option::is_none"
    )]
    pub credential_id: Option<String>,
    #[serde(
        rename = "keyType",
        alias = "KeyType",
        skip_serializing_if = "Option::is_none"
    )]
    pub key_type: Option<String>,
    #[serde(
        rename = "keyAlgorithm",
        alias = "KeyAlgorithm",
        skip_serializing_if = "Option::is_none"
    )]
    pub key_algorithm: Option<String>,
    #[serde(
        rename = "keyCurve",
        alias = "KeyCurve",
        skip_serializing_if = "Option::is_none"
    )]
    pub key_curve: Option<String>,
    #[serde(
        rename = "keyValue",
        alias = "KeyValue",
        skip_serializing_if = "Option::is_none"
    )]
    pub key_value: Option<String>,
    #[serde(
        rename = "rpId",
        alias = "RpId",
        skip_serializing_if = "Option::is_none"
    )]
    pub rp_id: Option<String>,
    #[serde(
        rename = "rpName",
        alias = "RpName",
        skip_serializing_if = "Option::is_none"
    )]
    pub rp_name: Option<String>,
    #[serde(
        rename = "userHandle",
        alias = "UserHandle",
        skip_serializing_if = "Option::is_none"
    )]
    pub user_handle: Option<String>,
    #[serde(
        rename = "userName",
        alias = "UserName",
        skip_serializing_if = "Option::is_none"
    )]
    pub user_name: Option<String>,
    #[serde(
        rename = "userDisplayName",
        alias = "UserDisplayName",
        skip_serializing_if = "Option::is_none"
    )]
    pub user_display_name: Option<String>,
    #[serde(
        rename = "counter",
        alias = "Counter",
        skip_serializing_if = "Option::is_none"
    )]
    pub counter: Option<String>,
    #[serde(
        rename = "discoverable",
        alias = "Discoverable",
        skip_serializing_if = "Option::is_none"
    )]
    pub discoverable: Option<String>,
    #[serde(rename = "creationDate", alias = "CreationDate")]
    pub creation_date: String,
}

impl CipherFido2CredentialModel {
    pub fn new(creation_date: String) -> CipherFido2CredentialModel {
        CipherFido2CredentialModel {
            credential_id: None,
            key_type: None,
            key_algorithm: None,
            key_curve: None,
            key_value: None,
            rp_id: None,
            rp_name: None,
            user_handle: None,
            user_name: None,
            user_display_name: None,
            counter: None,
            discoverable: None,
            creation_date,
        }
    }
}
