/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

/// PublicKeysResponseModel : This response model is used to return the public keys of a user, to
/// any other registered user or entity on the server. It can contain public keys
/// (signature/encryption), and proofs between the two. It does not contain (encrypted) private
/// keys.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PublicKeysResponseModel {
    #[serde(
        rename = "object",
        alias = "Object",
        skip_serializing_if = "Option::is_none"
    )]
    pub object: Option<String>,
    #[serde(
        rename = "verifyingKey",
        alias = "VerifyingKey",
        skip_serializing_if = "Option::is_none"
    )]
    pub verifying_key: Option<String>,
    #[serde(
        rename = "signedPublicKey",
        alias = "SignedPublicKey",
        skip_serializing_if = "Option::is_none"
    )]
    pub signed_public_key: Option<String>,
    #[serde(rename = "publicKey", alias = "PublicKey")]
    pub public_key: Option<String>,
}

impl PublicKeysResponseModel {
    /// This response model is used to return the public keys of a user, to any other registered
    /// user or entity on the server. It can contain public keys (signature/encryption), and proofs
    /// between the two. It does not contain (encrypted) private keys.
    pub fn new(public_key: Option<String>) -> PublicKeysResponseModel {
        PublicKeysResponseModel {
            object: None,
            verifying_key: None,
            signed_public_key: None,
            public_key,
        }
    }
}
