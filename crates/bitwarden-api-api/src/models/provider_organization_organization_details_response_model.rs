/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProviderOrganizationOrganizationDetailsResponseModel {
    #[serde(
        rename = "object",
        alias = "Object",
        skip_serializing_if = "Option::is_none"
    )]
    pub object: Option<String>,
    #[serde(rename = "id", alias = "Id", skip_serializing_if = "Option::is_none")]
    pub id: Option<uuid::Uuid>,
    #[serde(
        rename = "providerId",
        alias = "ProviderId",
        skip_serializing_if = "Option::is_none"
    )]
    pub provider_id: Option<uuid::Uuid>,
    #[serde(
        rename = "organizationId",
        alias = "OrganizationId",
        skip_serializing_if = "Option::is_none"
    )]
    pub organization_id: Option<uuid::Uuid>,
    #[serde(rename = "key", alias = "Key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    #[serde(
        rename = "settings",
        alias = "Settings",
        skip_serializing_if = "Option::is_none"
    )]
    pub settings: Option<String>,
    #[serde(
        rename = "creationDate",
        alias = "CreationDate",
        skip_serializing_if = "Option::is_none"
    )]
    pub creation_date: Option<String>,
    #[serde(
        rename = "revisionDate",
        alias = "RevisionDate",
        skip_serializing_if = "Option::is_none"
    )]
    pub revision_date: Option<String>,
    #[serde(
        rename = "userCount",
        alias = "UserCount",
        skip_serializing_if = "Option::is_none"
    )]
    pub user_count: Option<i32>,
    #[serde(
        rename = "seats",
        alias = "Seats",
        skip_serializing_if = "Option::is_none"
    )]
    pub seats: Option<i32>,
    #[serde(
        rename = "occupiedSeats",
        alias = "OccupiedSeats",
        skip_serializing_if = "Option::is_none"
    )]
    pub occupied_seats: Option<i32>,
    #[serde(
        rename = "remainingSeats",
        alias = "RemainingSeats",
        skip_serializing_if = "Option::is_none"
    )]
    pub remaining_seats: Option<i32>,
    #[serde(
        rename = "plan",
        alias = "Plan",
        skip_serializing_if = "Option::is_none"
    )]
    pub plan: Option<String>,
    #[serde(
        rename = "organizationName",
        alias = "OrganizationName",
        skip_serializing_if = "Option::is_none"
    )]
    pub organization_name: Option<String>,
}

impl ProviderOrganizationOrganizationDetailsResponseModel {
    pub fn new() -> ProviderOrganizationOrganizationDetailsResponseModel {
        ProviderOrganizationOrganizationDetailsResponseModel {
            object: None,
            id: None,
            provider_id: None,
            organization_id: None,
            key: None,
            settings: None,
            creation_date: None,
            revision_date: None,
            user_count: None,
            seats: None,
            occupied_seats: None,
            remaining_seats: None,
            plan: None,
            organization_name: None,
        }
    }
}
