/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateClientOrganizationRequestBody {
    #[serde(rename = "name", alias = "Name")]
    pub name: String,
    #[serde(rename = "ownerEmail", alias = "OwnerEmail")]
    pub owner_email: String,
    #[serde(
        rename = "planType",
        alias = "PlanType",
        skip_serializing_if = "Option::is_none"
    )]
    pub plan_type: Option<models::PlanType>,
    #[serde(
        rename = "seats",
        alias = "Seats",
        skip_serializing_if = "Option::is_none"
    )]
    pub seats: Option<i32>,
    #[serde(rename = "key", alias = "Key")]
    pub key: String,
    #[serde(rename = "keyPair", alias = "KeyPair")]
    pub key_pair: Box<models::KeyPairRequestBody>,
    #[serde(rename = "collectionName", alias = "CollectionName")]
    pub collection_name: String,
}

impl CreateClientOrganizationRequestBody {
    pub fn new(
        name: String,
        owner_email: String,
        key: String,
        key_pair: models::KeyPairRequestBody,
        collection_name: String,
    ) -> CreateClientOrganizationRequestBody {
        CreateClientOrganizationRequestBody {
            name,
            owner_email,
            plan_type: None,
            seats: None,
            key,
            key_pair: Box::new(key_pair),
            collection_name,
        }
    }
}
