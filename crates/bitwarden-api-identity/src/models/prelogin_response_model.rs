/*
 * Bitwarden Identity
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PreloginResponseModel {
    #[serde(rename = "kdf", alias = "Kdf", skip_serializing_if = "Option::is_none")]
    pub kdf: Option<models::KdfType>,
    #[serde(
        rename = "kdfIterations",
        alias = "KdfIterations",
        skip_serializing_if = "Option::is_none"
    )]
    pub kdf_iterations: Option<i32>,
    #[serde(
        rename = "kdfMemory",
        alias = "KdfMemory",
        skip_serializing_if = "Option::is_none"
    )]
    pub kdf_memory: Option<i32>,
    #[serde(
        rename = "kdfParallelism",
        alias = "KdfParallelism",
        skip_serializing_if = "Option::is_none"
    )]
    pub kdf_parallelism: Option<i32>,
}

impl PreloginResponseModel {
    pub fn new() -> PreloginResponseModel {
        PreloginResponseModel {
            kdf: None,
            kdf_iterations: None,
            kdf_memory: None,
            kdf_parallelism: None,
        }
    }
}
