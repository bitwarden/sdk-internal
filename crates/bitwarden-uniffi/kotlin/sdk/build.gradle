plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

android {
    namespace 'com.bitwarden.sdk'
    compileSdk 35

    defaultConfig {
        minSdk 28
        targetSdk 35

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    lint {
        baseline = file('lint-baseline.xml')
    }

    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.bitwarden'
            artifactId = 'sdk-android-temp'

            if (findProperty('version') == 'unspecified') {
                // Determine the version from the git history.
                //
                // PRs: use the branch name.
                // Main: Grab it from `crates/bitwarden/Cargo.toml`

                def branchName = 'git branch --show-current'.execute().text.trim()

                if (branchName == 'main') {
                    def content = ['grep', '-o', '^version = ".*"', rootDir.toString() + '/../../../Cargo.toml'].execute().text.trim()
                    def match = ~/version = "(.*)"/
                    def matcher = match.matcher(content)
                    matcher.find()

                    version = "${matcher.group(1)}-SNAPSHOT"
                } else {
                    // branchName-SNAPSHOT
                    version = "${branchName.replaceAll('/', '-')}-SNAPSHOT"
                }
            }

            afterEvaluate {
                from components.release
            }
        }
    }
    repositories {
        maven {
            name = 'GitHubPackages'
            url = 'https://maven.pkg.github.com/bitwarden/sdk-internal'
            credentials {
                username = System.getenv('GITHUB_ACTOR')
                password = System.getenv('GITHUB_TOKEN')
            }
        }
    }
}

// Find and include the classes.jar from platform-verifier.
//
// Based on the instructions from the readme in https://github.com/rustls/rustls-platform-verifier
// and issue details from https://github.com/rustls/rustls-platform-verifier/issues/115.
File findRustlsPlatformVerifierClassesJar() {
    def dependencyText = providers.exec {
        it.workingDir = new File('../../')
        commandLine('cargo', 'metadata', '--format-version', '1')
    }.standardOutput.asText.get()

    def dependencyJson = new groovy.json.JsonSlurper().parseText(dependencyText)
    def manifestPath = file(dependencyJson.packages.find { it.name == 'rustls-platform-verifier-android' }.manifest_path)

    def aar = fileTree(manifestPath.parentFile).matching {
        include 'maven/rustls/rustls-platform-verifier/*/rustls-platform-verifier-*.aar'
    }.getSingleFile()
    return zipTree(aar).matching { include 'classes.jar' }.getSingleFile()
}

dependencies {
    implementation 'net.java.dev.jna:jna:5.17.0@aar'
    implementation files(findRustlsPlatformVerifierClassesJar())

    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.10.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}
